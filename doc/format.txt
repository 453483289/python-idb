well there is an existing parser here:
  https://github.com/nlitsme/pyidbutil

file size: 0xE168

signature:
```
$ file empty.idb
  empty.idb: IDA (Interactive Disassembler) database
```

header:
```
          [ sig   ]
00000000: 4944 4131 0000 fc00 0000 0000 0000 0581  IDA1............
                                   [ sig   ]
00000010: 0000 0000 0000 0000 0000 ddcc bbaa 0600  ................
          [ size? ]
00000020: 0ec1 0000 0000 0000 0000 0000 0000 0000  ................
          [ size? ]           [csum?  ] [csum?==
00000030: 17e1 0000 0000 0000 1d08 c151 ab1d 5606  ...........Q..V.
          ========]
00000040: ba48 9382 0000 0000 6f33 4c40 0000 0000  .H......o3L@....
00000050: 0000 0000 0000 0000 7c00 0000 0000 0000  ........|.......
00000060: 0000 0000 0000 0000 0000 0000 0000 0000  ................
00000070: 0000 0000 0000 0000 0000 0000 0000 0000  ................
00000080: 0000 0000 0000 0000 0000 0000 0000 0000  ................
00000090: 0000 0000 0000 0000 0000 0000 0000 0000  ................
```
size? at 0x20 appears related to the total size.
  based on correlation with kernel32.
size? at 0x30 is 0x81 less than total file size.
  for kernel32, its pretty close,
    difference is -0x3079 (over 0xFFB190 bytes).
csum? at 0x38 changes with reopen.
  high entropy.
csum? at 0x3C does not change.
  high entropy.

sections:
  id0 - contains contents of B-tree style database
  id1 - contains flags that describe each program byte
  nam - contains index information related to named program locations
  til - contains information about local type definitions
  via: https://github.com/BinaryAnalysisPlatform/qira/blob/master/extra/parseida/parseidb.py

BTREE_PAGE_SIZE = 8192
via: https://github.com/BinaryAnalysisPlatform/qira/blob/master/extra/parseida/parseidb.py

file id0:
length: 0x8000
idb file offset: 0x105
idb section header (0xFE):
```
[size   ] [ unk   ] []
0080 0000 0000 0000 00
```
contents (0x105):
```
00000000: 0000 0000 0020 0100 0000 0401 0000 0300  ..... ..........
00000010: 0000 0142 2d74 7265 6520 7632 0001 0000  ...B-tree v2....
00000020: 0000 0000 0000 0000 0000 0000 0000 0000  ................
00000030: 0000 0000 0000 0000 0000 0000 0000 0000  ................
00000040: 0000 0000 0000 0000 0000 0000 0000 0000  ................
```

file id1:
length: 0x4000
idb file offset: 0x810E
idb section header:
```
[size   ] [ unk   ]
0040 0000 0000 0000
```
contents (0x810E):
```
00000000: 5641 2a00 0300 0000 0100 0000 0008 0000  VA*.............
00000010: 0200 0000 0000 0000 0100 0000 0000 0000  ................
00000020: 0000 0000 0000 0000 0000 0000 0000 0000  ................
00000030: 0000 0000 0000 0000 0000 0000 0000 0000  ................
00000040: 0000 0000 0000 0000 0000 0000 0000 0000  ................
```


file .nam:
length: 0x2000
idb file offset: 0xC117
idb section header:
```
[size   ] [ unk   ]
0020 0000 0000 0000
```
contents (0xC117):
```
00000000: 5641 2a00 0300 0000 0000 0000 0008 0000  VA*.............
00000010: 0100 0000 0000 0000 0000 0000 0000 0000  ................
00000020: 0000 0000 0000 0000 0000 0000 0000 0000  ................
00000030: 0000 0000 0000 0000 0000 0000 0000 0000  ................
00000040: 0000 0000 0000 0000 0000 0000 0000 0000  ................
```

file .til:
length: 0x48
idb file offset: 0xE120
idb section header:
```
[size   ] [ unk   ]
4800 0000 0000 0000
```
contents (0xE120):
```
          [ TIL header ] [ unc   ] [ unc   ] [][buf
0000e120: 4944 4154 494c 1200 0000 1200 0000 164c  IDATIL.........L
0000e130: 6f63 616c 2074 7970 6520 6465 6669 6e69  ocal type defini
                     ]
0000e140: 7469 6f6e 7300 0013 0401 0400 0000 0000  tions...........
0000e150: 0000 0000 0100 0000 0000 0000 0000 0000  ................
0000e160: 0000 0000 0000 0000                      ........
```
